name: Release

on:
  push:
    branches:
      - 'master'
#    paths:
#       - 'extensions/*'
#       - 'platforms.json'
#       - 'app/*'
jobs:
  build:
    name: Perform release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.2

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('.github/quarkusindexcatalog.java') }}
          restore-keys: |
            ${{ runner.os }}-maven
      - name: Index Catalog
        uses: jbangdev/jbang-action@v0.51.1
        with:
          script: .github/quarkusindexcatalog.java
          scriptargs: --repository-path=. --output-path=app/json/ --split

      - name: gzip all produced JSON files
        uses: stefh/ghaction-CompressFiles@v1
        with:
          path: ./app/json
          extensions: '.json'
          tools: 'gzip'

      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v2
        with:
          token: ${{secrets.github_token}}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'v${{ steps.buildnumber.outputs.build_number }}'
          release_name: Release ${{ steps.buildnumber.outputs.build_number }}

      - name: Upload registry.json
        uses: actions/upload-release-asset@v1.0.2
        id: upload-registry-json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./app/json/registry.json
          asset_name: registry.json
          asset_content_type: application/json
      - name: Upload registry.json.gz
        uses: actions/upload-release-asset@v1.0.2
        id: upload-registry-json-gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./app/json/registry.json.gz
          asset_name: registry.json.gz
          asset_content_type: application/gzip
      - name: Docker Login
        uses: Azure/docker-login@v1
        with:
          # Container registry username
          username: ${{ secrets.DOCKER_USERNAME }}
          # Container registry password
          password: ${{ secrets.DOCKER_PASSWORD }}
          # Container registry server url
          login-server: quay.io
      - name: Build and push Docker images
        run: |
          cd app
          # IMAGE_TAG=$(git rev-parse --short=7 HEAD)
          IMAGE_TAG=v${{ steps.buildnumber.outputs.build_number }}
          docker build --build-arg REGISTRY_VERSION=$IMAGE_TAG . -t quay.io/quarkus/registry-app:latest
          docker tag quay.io/quarkus/registry-app:latest quay.io/quarkus/registry-app:${IMAGE_TAG}
          docker push quay.io/quarkus/registry-app:latest
          docker push quay.io/quarkus/registry-app:${IMAGE_TAG}
